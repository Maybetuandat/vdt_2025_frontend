apiVersion: v1
kind: ConfigMap
metadata:
  name: vdt-frontend-frontend-chart-nginx-config
  namespace: vdt-app
data:
  default.conf: |
    # Define structured log format for better parsing
    log_format json_combined escape=json
    '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"method":"$request_method",'
        '"path":"$uri",'
        '"query_string":"$query_string",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"request_time":$request_time,'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_response_time":"$upstream_response_time"'
    '}';

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # Log TẤT CẢ requests ra stdout để hiện trong kubectl logs
        access_log /dev/stdout json_combined;
        error_log /dev/stderr warn;
        
        # Nginx status endpoint
        location /nginx_status {
            stub_status on;
            # Enable logging để test
            access_log /dev/stdout json_combined;
            allow all;
        }
        
        # Health check endpoint - ENABLE logging để test
        location /health {
            # Enable logging để thấy trong kubectl logs
            access_log /dev/stdout json_combined;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API proxy với logging đầy đủ
        location /api/ {
            # Log API requests ra stdout
            access_log /dev/stdout json_combined;
            
            proxy_pass http://vdt-backend-backend-chart:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
            }
        }
        
        # Static files - Enable logging để test
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            # Enable logging cho static files để test
            access_log /dev/stdout json_combined;
        }
        
        # Frontend SPA routing
        location / {
            # Log frontend requests ra stdout
            access_log /dev/stdout json_combined;
            try_files $uri $uri/ /index.html;
        }
    }